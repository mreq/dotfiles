#!/bin/bash
actions=(
  'Change workspace layout'
  'Show all scratchpad windows'
  'Load layout'
  'Rename workspace'
)

function handleActionSelection {
  case $1 in
    'Change workspace layout' )
      changeWorkspaceLayout ;;
    'Show all scratchpad windows' )
      showAllScratchpadWindows ;;
    'Rename workspace' )
      renameWorkspace ;;
    'Load layout' )
      loadLayout ;;
  esac
}

function renameWorkspace {
  i3_rename_workspace
}

function changeWorkspaceLayout {
  function handleInput {
    case $1 in
      'tabbed' )
        layout='tabbed' ;;
      'horizontal split' )
        layout='splith' ;;
      'vertical split' )
        layout='splitv' ;;
      'stacked' )
        layout='stacked' ;;
    esac
    if [[ $layout ]]; then
      i3-msg layout "$layout"
    fi
  }
  layouts=(
    'tabbed'
    'horizontal split'
    'vertical split'
    'stacked'
  )
  original=$( i3-msg -t get_workspaces | jq '.[] | select(.focused) | .num' )
  handleInput "$( printf "%s\n" "${layouts[@]}" | rofi -dmenu -i -p 'rename ↠ ' )"
}

function loadLayout {
  function handleInput {
    if [[ $1 ]]; then
      i3-msg append_layout "$1"
    fi
  }

  handleInput "$( ls ~/.dotfiles/i3/layouts | rofi -dmenu -i -p 'layout ↠ ' )"
}

function showAllScratchpadWindows {
  i3-msg -t get_tree | jq "recurse(.nodes[]) | select(.name == \"__i3_scratch\") | recurse(.floating_nodes[]) | recurse(.nodes[]) | .window" | grep -v null | awk '{ print "i3-msg \"[id="$1"]\" scratchpad show" }' | sh
}

handleActionSelection "$( printf "%s\n" "${actions[@]}" | rofi -dmenu -i -p 'i3 action ↠ ' )"
