[
  // Magic
  {
    "keys": ["alt+space"],
    "command": "sublime_magic",
    "context": [{ "key": "vi_command_mode_aware" }]
  },
  {
    "keys": ["alt+space"],
    "command": "sublime_magic"
  },

  // Keyboard layout
  {
    "keys": ["alt+backspace"],
    "command": "run_cmd",
    "args": {
      "cmd": "switch_keyboard_layout"
    }
  },

  // Ctrl+p
  {
    "keys": [" ", "j"],
    "command": "show_overlay",
    "args": {
      "overlay": "goto",
      "show_files": true
    },
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Ctrl+p: same folder
  {
    "keys": [" ", "i"],
    "command": "fuzzy_start_from_file",
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Ctrl+Shift+p
  {
    "keys": [" ", "k"],

    "command": "show_overlay",
    "args": {
      "overlay": "command_palette"
    },
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Ctrl+p: controllers
  {
    "keys": [" ", "r", "c"],
    "command": "show_overlay",
    "args": {
      "overlay": "goto",
      "show_files": true,
      "text": "app/controllers/"
    },
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Ctrl+p: models
  {
    "keys": [" ", "r", "m"],
    "command": "show_overlay",
    "args": {
      "overlay": "goto",
      "show_files": true,
      "text": "app/models/"
    },
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Generic: ctrl+vim movement
  { "keys": ["ctrl+h"], "command": "move", "args": { "by": "characters", "forward": false }, "context": [{ "key": "vi_insert_mode_aware" }, { "key": "selection_empty" }] },
  { "keys": ["ctrl+l"], "command": "move", "args": { "by": "characters", "forward": true }, "context":  [{ "key": "vi_insert_mode_aware" }, { "key": "selection_empty" }] },
  { "keys": ["ctrl+k"], "command": "move", "args": { "by": "lines", "forward": false }, "context":      [{ "key": "vi_insert_mode_aware" }, { "key": "selection_empty" }] },
  { "keys": ["ctrl+j"], "command": "move", "args": { "by": "lines", "forward": true }, "context":       [{ "key": "vi_insert_mode_aware" }, { "key": "selection_empty" }] },

  // Generic: close window
  {
    "keys": ["ctrl+q"],
    "command": "better_close_window"
  },

  // Generic: close panels by escape
  {
    "keys": ["escape"],
    "command": "hide_panel",
    "args": { "cancel": true },
    "context": [{ "key": "panel_visible" }]
  },

  // Generic: open from menus using vim movement
  {
    "keys": ["ctrl+l"],
    "command": "chain",
    "args": {
      "commands": [
        ["move", { "by": "characters", "forward": true }],
        ["move", { "by": "lines", "forward": true }]
      ]
    },
    "context": [
      { "key": "overlay_visible" }
    ]
  },

  // Generic: toggle menu
  {
    "keys": [" ", "m", "m"],
    "command": "toggle_menu",
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Generic: select sprite
  {
    "keys": [" ", "s", "s"],
    "command": "select_sprite",
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // // Generic: indent
  // {
  //   "keys": [">"],
  //   "command": "indent",
  //   "context": [{ "key": "vi_command_mode_aware" }]
  // },

  // // Generic: unindent
  // {
  //   "keys": ["<"],
  //   "command": "unindent",
  //   "context": [{ "key": "vi_command_mode_aware" }]
  // },

  // Generic: goto @
  {
    "keys": [" ", "r", "r"],
    "command": "show_overlay",
    "args": {
      "overlay": "goto",
      "text": "@"
    },
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Generic: goto definition
  {
    "keys": [" ", "f", "d"],
    "command": "goto_definition",
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Generic: change quotes
  {
    "keys": [" ", "t", "q"],
    "command": "change_quotes",
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Generic: add line
  {
    "keys": ["alt+o"],
    "command": "run_macro_file",
    "args": {"file": "res://Packages/Default/Add Line.sublime-macro"},
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Generic: wrap in brackets
  {
    "keys": [" ", "y", "("],
    "command": "run_macro_file",
    "args": {"file": "res://Packages/User/Wrap in Brackets.sublime-macro"},
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Generic: wrap in brackets
  {
    "keys": [" ", "y", "y"],
    "command": "run_macro_file",
    "args": {"file": "res://Packages/User/Wrap in Brackets.sublime-macro"},
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Generic: add line above
  {
    "keys": ["alt+shift+o"],
    "command": "run_macro_file",
    "args": {"file": "res://Packages/Default/Add Line Before.sublime-macro"},
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Cursors: create cursor for each selected line
  {
    "keys": ["ctrl+shift+l"],
    "command": "split_selection_into_lines",
    "context": [
      { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
    ]
  },

  // Cursors: create cursor for all matches under
  {
    "keys": ["ctrl+alt+shift+d"],
    "command": "find_all_under"
  },

  // Cursors: add cursor above
  {
    "keys": ["alt+shift+up"],
    "command": "select_lines",
    "args": { "forward": false },
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Cursors: add cursor bellow
  {
    "keys": ["alt+shift+down"],
    "command": "select_lines",
    "args": { "forward": true },
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Cursors: create cursors by regex
  {
    "keys": ["ctrl+alt+f"],
    "command": "select_by_regex"
  },

  // Cursors: create cursors by regex
  {
    "keys": ["ctrl+alt+f"],
    "command": "select_by_regex"
  },

  // Tabs: next
  {
    "keys": ["tab"],
    "command": "next_view",
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Tabs: next
  {
    "keys": ["shift+tab"],
    "command": "prev_view",
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Tabs: next
  {
    "keys": ["ctrl+tab"],
    "command": "next_view"
  },

  // Tabs: previous
  {
    "keys": ["ctrl+shift+tab"],
    "command": "prev_view"
  },

  // Tabs: next
  {
    "keys": ["L"],
    "command": "next_view",
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Tabs: previous
  {
    "keys": ["H"],
    "command": "prev_view",
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Tabs: move next
  {
    "keys": ["ctrl+shift+h"],
    "command": "move_tab",
    "args": { "position": "-1" },
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Tabs: move previous
  {
    "keys": ["ctrl+shift+l"],
    "command": "move_tab",
    "args": { "position": "+1" },
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // // Tabs: next
  // {
  //   "keys": ["shift+j"],
  //   "command": "next_view",
  //   "context": [{ "key": "vi_command_mode_aware" }]
  // },

  // // Tabs: previous
  // {
  //   "keys": ["shift+k"],
  //   "command": "prev_view",
  //   "context": [{ "key": "vi_command_mode_aware" }]
  // },

  // ChangeList: show
  {
    "keys": [" ", "e"],
    "command": "show_change_list",
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // ChangeList: show
  {
    "keys": ["ctrl+e"],
    "command": "show_change_list"
  },

  // Files: new
  {
    "keys": [" ", "f", "n"],
    "command": "side_bar_copy_name",
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Files: delete
  {
    "keys": [" ", "f", "x"],
    "command": "advanced_new_file_delete",
    "args": { "current": true },
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Files: move
  {
    "keys": [" ", "f", "m"],
    "command": "side_bar_move",
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Files: rename
  {
    "keys": [" ", "f", "r"],
    "command": "side_bar_rename",
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Files: reopen last closed
  {
    "keys": [" ", "f", "o"],
    "command": "reopen_last_file",
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Files: copy path
  {
    "keys": [" ", "f", "p"],
    "command": "copy_file_path",
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Files: copy path with line number
  {
    "keys": [" ", "f", "l"],
    "command": "copy_file_path_with_line_number",
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Files: copy git path
  {
    "keys": [" ", "f", "g"],
    "command": "copy_file_path_on_git_repo",
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Files: copy test command
  {
    "keys": [" ", "f", "t"],
    "command": "copy_file_path_as_rails_test",
    "context": [
      { "key": "vi_command_mode_aware" },
      { "key": "selector", "operator": "equal", "operand": "source.ruby.rails" }
    ]
  },

  // Files: close
  {
    "keys": [" ", "x"],
    "command": "close_file",
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Files: save
  {
    "keys": [" ", "s"],
    "command": "save",
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Files: close all
  {
    "keys": [" ", "f", "a"],
    "command": "close_all",
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Files: duplicate file
  {
    "keys": [" ", "f", "u"],
    "command": "side_bar_duplicate",
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Files: find
  {
    "keys": [" ", "f", "f"],
    "command": "search_in_project",
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Texts: transform to uppercase
  {
    "keys": [" ", "t", "u"],
    "command": "upper_case",
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Texts: transform to uppercase
  {
    "keys": [" ", "t", "l"],
    "command": "lower_case",
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Texts: delete line
  {
    "keys": ["ctrl+shift+x"],
    "command": "chain",
    "args": {
      "commands": [
        ["expand_selection", { "to": "line" }],
        ["left_delete"]
      ]
    }
  },

  // Generic: redo
  {
    "keys": ["r"],
    "command": "redo",
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Generic: convert to spaces
  {
    "keys": ["alt+p"],
    "command": "paste_and_indent"
  },

  // Generic: convert case
  {
    "keys": ["alt+c"],
    "command": "toggle_snake_camel_pascal"
  },

  // Generic: Strip leading whitespace
  {
    "keys": [" ", "r", "l"],
    "command": "strip_spaces",
    "context": [
      { "key": "vi_command_mode_aware" }
    ]
  },

  // Navigation: move down by comments
  {
    "keys": ["ctrl+alt+shift+j"],
    "command": "move_by_comments"
  },

  // Navigation: move up by comments
  {
    "keys": ["ctrl+alt+shift+k"],
    "command": "move_by_comments",
    "args": { "forward": false }
  },

  // Navigation: page down
  {
    "keys": ["ctrl+d"],
    "command": "move",
    "args": {
      "by": "pages",
      "forward": true
    },
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Navigation: page down
  {
    "keys": ["ctrl+u"],
    "command": "move",
    "args": {
      "by": "pages",
      "forward": false
    },
    "context": [{ "key": "vi_command_mode_aware" }]
  },

  // Cursors: expand selection to whitespace
  {
    "keys": ["ctrl+alt+d"],
    "command": "expand_selection_to_whitespace"
  },

  // Generic: submit replace all panel
  {
    "keys": ["ctrl+alt+enter"],
    "command": "replace_all",
    "args": { "close_panel": true },
    "context": [
      { "key": "panel", "operand": "replace" },
      { "key": "panel_has_focus" }
    ]
  },

  // Search: open
  {
    "keys": ["o"],
    "command": "find_in_files_open_file",
    "context": [
      { "key": "selector", "operator": "equal", "operand": "text.find-in-files" }
    ]
  },

  // Search: open all
  {
    "keys": [" ", "o"],
    "command": "find_in_files_open_all_files",
    "context": [
      { "key": "selector", "operator": "equal", "operand": "text.find-in-files" }
    ]
  },

  // Search: navigate down
  {
    "keys": ["j"],
    "command": "find_in_files_jump_file", "args": { "forward": true },
    "context": [
      { "key": "selector", "operator": "equal", "operand": "text.find-in-files" },
      { "key": "vi_command_mode_aware" }
    ]
  },

  // Search: navigate up
  {
    "keys": ["k"],
    "command": "find_in_files_jump_file", "args": { "forward": false },
    "context": [
      { "key": "selector", "operator": "equal", "operand": "text.find-in-files" },
      { "key": "vi_command_mode_aware" }
    ]
  },

  // Search: replace all
  {
    "keys": ["ctrl+alt+enter"],
    "command": "replace_all",
    "args": { "close_panel": true },
    "context": [
      { "key": "panel", "operand": "replace" },
      { "key": "panel_has_focus" }
    ]
  },

  // Search: toggle case sensitive
  {
    "keys": ["alt+c"],
    "command": "toggle_case_sensitive",
    "context": [
      { "key": "setting.is_widget", "operator": "equal", "operand": true }
    ]
  },

  // Align arguments: format
  {
    "keys": [" ", "a", "a"],
    "command": "format_arguments",
    "context": [
      { "key": "vi_command_mode_aware" }
    ]
  },

  // Align arguments: align
  {
    "keys": [" ", "a", "i"],
    "command": "align_arguments",
    "context": [
      { "key": "vi_command_mode_aware" }
    ]
  },

  // { "keys": ["ctrl+shift+l"], "command": "list_stylesheet_variables", "context": [
  //   { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
  // ]},

  // Terminal: run terminal in project dir
  {
    "keys": ["f9"],
    "command": "run_cmd",
    "args": {
      // "cmd": "terminator --working-directory=\"$project_dir\""
      "cmd": "xfce4-terminal --command='tmux -2' --working-directory=\"$project_dir\""
    }
  },

  // Sidebar: toggle
  {
    "keys": [" ", "l"],
    "command": "chain",
    "args": {
      "commands": [["toggle_side_bar"], ["focus_side_bar"]]
    },
    "context": [
      { "key": "vi_command_mode_aware" }
    ]
  },

  // Sidebar: hide on escape
  {
    "keys": ["escape"],
    "command": "toggle_side_bar",
    "context": [
      { "key": "control", "operand": "sidebar_tree" }
    ]
  },

  // Open-Include override
  {
    "keys": ["g", "f"],
    "command": "open_include",
    "context": [
      { "key": "vi_command_mode_aware" }
    ]
  },

  // Templates: Toggle wrap
  {
    "keys": [" ", "t", "w"],
    "command": "toggle_template_wrap",
    "context": [
      { "key": "selector", "operator": "equal", "operand": "source.emblem" },
      { "key": "vi_command_mode_aware" }
    ]
  },

  {
    "keys": [" ", "t", "o"],
    "command": "run_cmd",
    "context": [
      { "key": "vi_command_mode_aware" }
    ],
    "args": {
      "cmd": "subl $project_dir/TODO"
    }
  },

  {
    "keys": ["f10"],
    "command": "sort_lines",
    "args": {
      "case_sensitive": false
    }
  },

  {
    "keys": ["g", "s"],
    "command": "sort_lines",
    "context": [
      { "key": "vi_command_mode_aware" }
    ],
    "args": {
      "case_sensitive": false
    }
  },

  // slim: ctrl+shift+space BEM__
  {
    "keys": ["ctrl+shift+space"],
    "command": "add_slim_bem_prefix",
    "context": [
      { "key": "selector", "operator": "equal", "operand": "text.slim" },
      { "key": "vi_insert_mode_aware" }
    ]
  },

  // sass: ctrl+shift+space &__
  {
    "keys": ["ctrl+shift+space"],
    "command": "insert_snippet",
    "args": { "contents": "&__$1\n  $0" },
    "context": [
      { "key": "selector", "operator": "equal", "operand": "source.sass" }
    ]
  },


  // scss: ctrl+shift+space &__
  {
    "keys": ["ctrl+shift+space"],
    "command": "insert_snippet",
    "args": { "contents": "&__$1 {\n  $0\n}" },
    "context": [
      { "key": "selector", "operator": "equal", "operand": "source.scss" }
    ]
  }

  // //////////////////////
  // // SublimeTODO
  // //////////////////////
  // {
  //   "keys": ["j"], "command": "navigate_results",
  //   "context": [
  //     { "key": "selector", "operator": "equal", "operand": "text.todo-list" }
  //   ],
  //   "args": {"direction": "forward"}
  // },
  // {
  //   "keys": ["k"], "command": "navigate_results",
  //   "context": [
  //     { "key": "selector", "operator": "equal", "operand": "text.todo-list" }
  //   ],
  //   "args": {"direction": "backward"}
  // },
  // {
  //   "keys": ["enter"], "command": "goto_comment",
  //   "context": [
  //     { "key": "selector", "operator": "equal", "operand": "text.todo-list" }
  //   ]
  // },
  // {
  //   "keys": ["o"], "command": "goto_comment",
  //   "context": [
  //     { "key": "selector", "operator": "equal", "operand": "text.todo-list" }
  //   ]
  // },

  // //////////////////////
  // // Layout management
  // //////////////////////
  // // origami
  // { "keys": ["ctrl+k", "ctrl+k"], "command": "destroy_pane", "args": {"direction": "self"} },
  // { "keys": ["alt+up"], "command": "travel_to_pane", "args": {"direction": "up"} },
  // { "keys": ["alt+right"], "command": "travel_to_pane", "args": {"direction": "right"} },
  // { "keys": ["alt+down"], "command": "travel_to_pane", "args": {"direction": "down"} },
  // { "keys": ["alt+left"], "command": "travel_to_pane", "args": {"direction": "left"} },
  // // Vintage origami
  // { "keys": ["alt+k"], "command": "travel_to_pane", "args": {"direction": "up"} },
  // { "keys": ["alt+l"], "command": "travel_to_pane", "args": {"direction": "right"} },
  // { "keys": ["alt+j"], "command": "travel_to_pane", "args": {"direction": "down"} },
  // { "keys": ["alt+h"], "command": "travel_to_pane", "args": {"direction": "left"} },
  // // Vintage origami
  // { "keys": ["alt+shift+k"], "command": "carry_file_to_pane", "args": {"direction": "up"} },
  // { "keys": ["alt+shift+l"], "command": "carry_file_to_pane", "args": {"direction": "right"} },
  // { "keys": ["alt+shift+j"], "command": "carry_file_to_pane", "args": {"direction": "down"} },
  // { "keys": ["alt+shift+h"], "command": "carry_file_to_pane", "args": {"direction": "left"} },
  // // { "keys": ["ctrl+shift+o"], "command": "create_pane", "args": {"direction": "down"} },
  // { "keys": ["ctrl+shift+e"], "command": "create_pane", "args": {"direction": "right"} },
  // // // switch focus
  // // { "keys": ["alt+left"], "command": "focus_group", "args": { "group": 0 } },
  // // { "keys": ["alt+right"], "command": "focus_group", "args": { "group": 1 } },
  // // // move to panel
  // { "keys": ["alt+shift+left"], "command": "carry_file_to_pane", "args": {"direction": "left"} },
  // { "keys": ["alt+shift+right"], "command": "carry_file_to_pane", "args": {"direction": "right"} },

  // //////////////////////
  // // R-box
  // //////////////////////
  // { "keys": ["ctrl+alt+enter"], "command": "r_box_send_selection", "context":
  //   [
  //     { "key": "selector", "operator": "equal", "operand": "source.r" }
  //   ]
  // },
  // { "keys": ["ctrl+enter"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Add Line.sublime-macro"}, "context":
  //   [
  //     { "key": "selector", "operator": "equal", "operand": "source.r" }
  //   ]
  // },
  // {
  //   "keys": ["ctrl+shift+b"],
  //   "command": "chain",
  //   "args": {
  //     "commands": [
  //       ["save"],
  //       ["r_box_source_code"]
  //     ]
  //   },
  //   "context": [
  //     { "key": "selector", "operator": "equal", "operand": "source.r" },
  //     { "key": "selector", "operator": "not_equal", "operand": "text.tex.latex" },
  //     { "key": "selector", "operator": "not_equal", "operand": "text.html.markdown" }
  //   ]
  // },
  // {
  //   "keys": ["ctrl+b"],
  //   "command": "chain",
  //   "args": {
  //     "commands": [
  //       ["save"],
  //       ["r_box_source_code"]
  //     ]
  //   },
  //   "context": [
  //     { "key": "selector", "operator": "equal", "operand": "source.r" },
  //     { "key": "selector", "operator": "not_equal", "operand": "text.tex.latex" },
  //     { "key": "selector", "operator": "not_equal", "operand": "text.html.markdown" }
  //   ]
  // },

  // //////////////////////
  // // search results
  // //////////////////////
  // {
  //   "keys": ["o"],
  //   "command": "find_in_files_goto",
  //   "context": [
  //     { "key": "selector", "operator": "equal", "operand": "text.find-in-files" }
  //   ]
  // },
  // {
  //   "keys": ["j"],
  //   "command": "move_by_paragraph", "args": { "forward": true },
  //   "context": [
  //     { "key": "selector", "operator": "equal", "operand": "text.find-in-files" },
  //     { "key": "vi_command_mode_aware" }
  //   ]
  // },
  // {
  //   "keys": ["k"],
  //   "command": "move_by_paragraph", "args": { "forward": false },
  //   "context": [
  //     { "key": "selector", "operator": "equal", "operand": "text.find-in-files" },
  //     { "key": "vi_command_mode_aware" }
  //   ]
  // },


  // // Project search
  // { "keys": ["ctrl+alt+shift+f"], "command": "show_panel", "args": {"panel": "find_in_files"} },
  // { "keys": ["ctrl+shift+f"], "command": "search_in_project" },

  // // Lorem: few words
  // { "keys": ["ctrl+alt+l"], "command": "lorem_ipsum", "args": {"qty": 1, "simple": true } },
  // // Lorem: sentence
  // { "keys": ["ctrl+alt++shift+l"], "command": "lorem_ipsum", "args": {"qty": 1, "simple": false } },

  // // JSON tree
  // { "keys": ["ctrl+r"], "command": "json_tree", "context":[
  //   { "key": "selector", "operator": "equal", "operand": "source.json" }
  // ] },

  // // YAML
  // { "keys": ["ctrl+shift+r"], "command": "copy_yaml_symbol_to_clipboard", "context":[
  //   { "key": "selector", "operator": "equal", "operand": "source.yaml" }
  // ] },

]
