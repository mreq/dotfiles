#!/bin/bash
start=$( date +%s%N )
file="$1"

# Warnings
if [[ $2 ]]; then
  warn="$2"
  cleanBuild=true
  # Start notify
  notify-send -i sublime-text 'knitr clean build' 'starting'
else
  warn="refs"
  cleanBuild=false
  # Start notify
  notify-send -i sublime-text 'knitr build' 'starting'
fi

# Is it a child document?
isChild=$( head -n1 "$file" | grep '%!' | awk -F'!' '{ print $2 }' )

cd "$( dirname "$file" )"

if [[ $isChild ]]; then
  target=$( basename "$isChild" )
  cd $( dirname $isChild )
else
  target=$file
fi

isBeamer=$( head -n2 "$target" | grep "documentclass.*beamer" )

if [[ "$cleanBuild" == true ]]; then
  # Remove garbage
  rm -f "${target%.Rnw}.aux" "${target%.Rnw}.bbl" "${target%.Rnw}.blg" "${target%.Rnw}.lof" "${target%.Rnw}.log" "${target%.Rnw}.lot" "${target%.Rnw}.out" "${target%.Rnw}.tex" "${target%.Rnw}.toc"
  # # Run bibtex
  # bibtex ${target%.Rnw}
fi

out=$( Rscript -e "library(knitr); knit(\"$target\", quiet = TRUE)" | grep -o '".*"' | awk -F'"' '{ print $2 }' )
if [[ $isBeamer ]]; then
  cd "$( dirname "$out" )"
  # Replace verbatim with listing in beamer
  sed -i 's/\\begin{verbatim}/\\begin{lstlisting}/g' "$out"
  sed -i 's/\\end{verbatim}/\\end{lstlisting}/g' "$out"
fi
# Replace color with xcolor
sed -i 's/\\usepackage\[\]{color}/\\usepackage[]{xcolor}/g' "$out"

output=$( (cd "$( dirname "$out" )" && rubber -qsf --warn $warn -m xelatex "$out" 2>&1) 2>&1 )

if [[ "$output" ]]; then
  notify-send -i process-error-symbolic -t 5000 'knitr error' 'There was a build error.'
  echo "$output" > /tmp/subl_build_error; subl /tmp/subl_build_error
else
  end=$( date +%s%N )
  notify-send -i process-completed-symbolic 'knitr build' "$( echo "$end" "$start" | awk '{ printf "%.2f", ($1-$2)/1000000000 }' )s"
fi
